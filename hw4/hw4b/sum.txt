Write a method that reads a quiz description in Aiken format and produces an ArrayList<ChoiceQuestion> with the questions in the file. Questions are separated by single blank lines.

If there is an error, throw a SyntaxException.

In the draft, don't do any error checking.

Use the following files:

ChoiceQuestion.java

import java.util.ArrayList;

/**
   A question with multiple choices.
*/
public class ChoiceQuestion extends Question
{
   private ArrayList<String> choices;

   /**
      Constructs a choice question with no choices.
   */
   public ChoiceQuestion()
   {
      choices = new ArrayList<String>();
   }

   /**
      Adds an answer choice to this question.
      @param choice the choice to add
      @param correct true if this is the correct choice, false otherwise
   */
   public void addChoice(String choice, boolean correct)
   {
      choices.add(choice);
      if (correct) 
      {
         // Convert choices.size() to string
         String choiceString = "" + choices.size();
         setAnswer(choiceString);
      }
   }
   
   public void display()
   {
      // Display the question text
      super.display();
      // Display the answer choices
      for (int i = 0; i < choices.size(); i++)
      {
         int choiceNumber = i + 1;
         System.out.println(choiceNumber + ": " + choices.get(i));     
      }
   }
}

Question.java

/**
   A question with a text and an answer.
*/
public class Question
{
   private String text;
   private String answer;

   /**
      Constructs a question with empty question and answer.
   */
   public Question() 
   {
      text = "";
      answer = "";
   }

   /**
      Sets the question text.
      @param questionText the text of this question
   */
   public void setText(String questionText)   
   {
      text = questionText;
   }

   /**
      Sets the answer for this question.
      @param correctResponse the answer
   */
   public void setAnswer(String correctResponse)
   {
      answer = correctResponse;
   }

   /**
      Checks a given response for correctness.
      @param response the response to check
      @return true if the response was correct, false otherwise
   */
   public boolean checkAnswer(String response)
   {
      return response.equals(answer);
   }

   /**
      Displays this question.
   */
   public void display()
   {
      System.out.println(text);
   }
}
AikenReaderDemo.java

import java.io.FileNotFoundException;
import java.util.Scanner;

public class AikenReaderDemo
{
   public static void main(String[] args) throws FileNotFoundException
   {
      String filename = args[0];
      try (AikenReader reader = new AikenReader(filename))
      {         
         for (Question q : reader.readQuestions())
         {
            q.display();
            System.out.println(q.checkAnswer("1") + " " + q.checkAnswer("4"));
         }
      }
      catch (SyntaxException ex)
      {
         System.out.println("Caught " + ex);
      }
   }
}
SyntaxException.java

public class SyntaxException extends RuntimeException
{
   public SyntaxException() {}
   public SyntaxException(String message) { super(message); }
   public SyntaxException(int line) { this("Syntax error in line " + line); }
}