Saajan Bariana (Scribe)
Noor Khan (Scribe)
Huy Ngo (Driver)

Part A

1. Done
2. You would just do first.next. Then you would do that node.next. 
You stop once you reach that number. You return the data in that node.
3. Done
4. It passes because we get the right answer
5. Done
6. It passes because it got the correct answer.
7. Done
8. We will get an exception
9. It is passing for the test that checks for n < 0
10. Make a for loop with a counter.
11. Done
12. It passes because it takes both exceptions into account.

Part B

1. Done
2. Done
3. Yes, but you want the loop to go to n - 1.
4. Done
5. Yes
6. The case would be if the number is greater than the length of the 
list. 
7. Done
8. No
9. You can write an if statement in your for loop to make sure the position is not null. 
If so, throw a IndexOutOfBoundsException
10. Done

Part C

1. removeHead and removeTail fail.
2. The mistakes would be at the beginning or at the end.
3. this = Mary and iter = Mary
4. first = 55 and last = 68
5. Mary : 55, had : 63, a : 65, little : 67, lamb : 69
6. little : 70, a : 67, had : 64, Mary : 57. They have different values for different words
7. Done
8. The second if statement would be executed.
9. Done
10. Iter should have moved to the next node in the list, but instead, it goes to the previous one
11. Done
12. It does not pass.

Part D

1. The last one
2. Previous should return little because little is before lamb. It points to lamb.
It does not remove anything.
3. After the first time it goes through, the first and last variables return nodes.
4. The last reference is wrong.
5. if it is at the last position, you call the remove last. And then make last equal to the previous one
6. It passes
7. It is easier using this so you can just run the whole thing at once. 
