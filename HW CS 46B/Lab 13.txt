Monil Gandhi(Driver)/ Arthur Hoang(Scribe)

Part A)

1) Done on paper
2) t2 has n - k nodes
3) n-k-1 and S(n) = S(0) x S(n) + S(1) x S(n-2) + ... + S(k) x S(n-k-1).
4) 1 and 1
5) 2 and 5. It is the same.
6) S(10)- 16,796 and S(20)- 6564120420
7) It is because of recursion

Part B)

1)import java.util.Random;

public class Trees2
{
   private static Random generator = new Random();
   
   public static void main(String[] args)
   {
       BinaryTree t = randomTree(6);
       System.out.println(t);
   }

   public static BinaryTree randomTree(int n)
   {
      if (n == 0) return null;
      if (n == 1) return new BinaryTree(n);
      int k = generator.nextInt(n);
      return new BinaryTree(n, new BinaryTree(k), new BinaryTree(n-k-1));
   }
}

2) It prints BinaryTree@15db9742
3) and 4) It is not a binary search tree because it is not sorted
5)  public static String toString(Node n)
   {
	   if(n == null)
	   {
		   return ".";
	   }
	   else
	   {
		   return "(" + toString(n.left) + " " + n.data + " " + toString(n.right) + ")";
	   }
	   
   }
   public String toString()
   {
	return toString(root);
	   
   }
6)((. 0 .) 6 (. 5 .))
7) Done
8)Done on paper

Part D)

1) Because the BinaryTrees are not sorted and BrinarSearchTrees are sorted
2) This class implements a binary search tree whose
   nodes hold objects that implement the Comparable
   interface

